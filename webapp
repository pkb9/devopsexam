To install Apache tomcat in root folder

1.	Restart the Ubuntu virtual box and when it starts booting  press Shift + Esc key together
2.	Restart again and when the black screen comes press Shift key
3.	Sudo –i // to go to root directory
4.	Sudo apt update && sudo upgrade –y
5.	cd /tmp
6.	wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.100/bin/apache-tomcat-9.0.100.tar.gz
7.	cd ..
8.	cd opt
9.	mkdir tomcat
10.	cd ..
11.	cd tmp
12.	tar file has to be extracted into the tomcat folder so run the below command
13.	sudo tar -xvzf apache-tomcat-9.0.100.tar.gz -C /opt/tomcat --strip-components=1
14.	cd ..
15.	cd opt/tomcat
16.	ls // we can see all files are extracted 
17.	cd conf
18.	ls // we can see server.xml use this file to change the port number from default 8080 to any number say 9090 because Jenkins is running on 8080
19.	gedit server.xml // go to line number 70 and change the portnumber to 9090  <connector port=9090…..> save
20.	we need to create tomcat users as well so add the users in tomcat-users.xml file
21.	gedit tomcat-users.xml  
22.	line 22 add  <user username="admin" password="Admin" roles="manager-gui"/> then save
23.	cd ..
24.	cd bin
25.	ls // we can startup.sh and shutdown,sh to start the tomcat and stop the tomcat 
26.	just try opening the page in browser say localhost:9090  it displays page cannot be displayed so we need to start the tomcat
27.	sh startup.sh
28.	now check in the browser, localhost:9090  tomcat web page is displayed
29.	go to manage app on the right side of the web page it will ask for username and password. Enter the user name and password what we added in the step number 22
30.	The server displays default files along with the user created files if any
31.	 Go back to terminal and type cd ..
32.	Ls // we can see webapps folder this is where we will be copying the war file generated by maven based web application



When we run ansible script on jenkins it says tomcat server not found so to fix this bug, do run the following commands and add tomcat.service file in /etc/systemd/system in root directory
1. Set Permissions for the username hemavathi
sudo chown -R tomcat:hemavathi /opt/tomcat
sudo chmod +x /opt/tomcat/bin/*.sh

2. write the tomcat.service file
sudo -i
cd /
cd etc/systemd/system
ls
//please check for the tomcat.service file,if available ignore the below steps,if not do add the tomcat.service file 

sudo systemctl start tomcat

mvn archetype:generate -DgroupId=com.example -DartifactId=MavenAnsibleWebapp -DarchetypeArtifactId=maven-archetype-webapp -DinteractiveMode=false

cd MavenAnsibleWebapp

gedit pom.xml
//code inside pom.xml
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.example</groupId>
  <artifactId>MavenAnsibleWebapp2</artifactId>
  <packaging>war</packaging>
  <version>1.0</version>
  <name>MavenAnsibleWebapp2</name>
  <url>http://maven.apache.org</url>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
<dependency>
    <groupId>javax.servlet</groupId>
    <artifactId>javax.servlet-api</artifactId>
    <version>4.0.1</version>
    <scope>provided</scope>
</dependency>
  </dependencies>
  <build>
  <plugins>
  <plugin>
  <groupId>org.apache.maven.plugins</groupId>
  <artifactId>maven-war-plugin</artifactId>
  <version>3.4.0</version>
  </plugin>
  </plugins>
    <finalName>MavenAnsibleWebapp2</finalName>
  </build>
</project>


Create a github repository named "MavenAnsibleWebapp"

gedit Jenkinsfile
pipeline {
    agent any

    tools {
        maven 'Maven'  // Make sure 'Maven' is configured in Jenkins under Global Tool Configuration
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/Bhumika954/MavenAnsibleWebapp2.git'
            }
        }

        stage('Build') {
            steps {
                sh 'mvn clean package'
            }
        }

        stage('Archive') {
            steps {
                archiveArtifacts artifacts: 'target/*.war', fingerprint: true
            }
        }

        stage('Deploy') {
            steps {
                sh 'ansible-playbook ansible/playbook.yml -i ansible/hosts.ini'
            }
        }
    }
}

mvn clean install

mkdir ansible
cd ansible

gedit hosts.ini
//code inside hosts.ini
[web]
localhost ansible_connection=local ansible_python_interpreter=/usr/bin/python3


gedit playbook.yml
//code inside playbook.yml --in src "workspace/*/target" *-Jenkins pipeline name
---
- name: Deploy to Tomcat
  hosts: web
  become: yes
  tasks:
    - name: Copy WAR file to Tomcat
      copy:
        src: "/var/snap/jenkins/4832/workspace/MavenAnsible-CICD/target/MavenAnsibleWebapp.war"
        dest: "/opt/tomcat/webapps/MavenAnsibleWebapp.war"
        remote_src: no
    - name:  Restart Tomcat
      systemd:
        name: tomcat
        state: restarted


cd ..

git init
git add .
git commit -m "Initial commit"
git remote add origin https://github.com/yenrimedia/MavenAnsibleWebapp.git
git remote set-url origin https://"your-token"@github.com/yenrimedia/MavenAnsibleWebapp.git
git push -u origin master

Create a jenkins pipeline named "MavenAnsible-CICD" and build it
cd ~/MavenAnsibleWebapp2
mvn clean install
or mvn clean package
ls target/
(You should see:MavenAnsibleWebapp.war)
sudo -i
cp /home/shruthi/MavenAnsibleWebapp2/target/MavenAnsibleWebapp.war /opt/tomcat/webapps/
chown tomcat:tomcat /opt/tomcat/webapps/MavenAnsibleWebapp.war
systemctl restart tomcat



Open localhost:9090, go to manager app and open "MavenAnsibleWebapp"

